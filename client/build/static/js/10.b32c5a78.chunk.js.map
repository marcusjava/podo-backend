{"version":3,"sources":["redux/actions/procedureActions.js","pages/Procedure/Table.js","redux/actions/serviceActions.js","pages/Procedure/index.js"],"names":["saveProcedure","data","dispatch","type","FETCH_PROCEDURE_REQUEST","axios","post","then","response","FETCH_PROCEDURE_SUCCESS","payload","toastr","success","Procedures","catch","error","FETCH_PROCEDURE_ERROR","message","updateProcedure","id","put","FETCH_PROCEDURES_REQUEST","get","FETCH_PROCEDURES_SUCCESS","FETCH_PROCEDURES_ERROR","Table","rowSelect","items","useSelector","state","procedure","procedures","useDispatch","useEffect","selectRowProp","mode","clickToSelect","onSelect","row","striped","hover","version","selectRow","pagination","options","noDataText","isKey","dataField","hidden","filter","delay","dataSort","dataFormat","cell","description","width","Services","FETCH_SERVICES_REQUEST","FETCH_SERVICES_SUCCESS","FETCH_SERVICES_ERROR","Procedure","useState","editMod","setEditMod","services","service","formRef","useRef","current","setErrors","reset","errorMessages","path","handleSubmit","a","schema","Yup","shape","ensure","required","name","validate","abortEarly","sendData","value","_id","inner","forEach","erro","Row","Col","m4","className","ref","onSubmit","md","label","rows","Button","variant","onClick","window","location","reload","setData"],"mappings":"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","file":"static/js/10.b32c5a78.chunk.js","sourcesContent":["import {\n\tFETCH_PROCEDURE_REQUEST,\n\tFETCH_PROCEDURE_SUCCESS,\n\tFETCH_PROCEDURE_ERROR,\n\tFETCH_PROCEDURES_REQUEST,\n\tFETCH_PROCEDURES_SUCCESS,\n\tFETCH_PROCEDURES_ERROR,\n} from '../types';\n\nimport { toastr } from 'react-redux-toastr';\n\nimport axios from 'axios';\n\nexport const saveProcedure = (data) => (dispatch) => {\n\tdispatch({ type: FETCH_PROCEDURE_REQUEST });\n\n\treturn axios\n\t\t.post('/procedures', data)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURE_SUCCESS, payload: response.data });\n\t\t\ttoastr.success('Procedimento salvo com sucesso');\n\t\t\tdispatch(Procedures());\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURE_ERROR, payload: error.response.data });\n\t\t\ttoastr.error(error.response.data.message);\n\t\t});\n};\n\nexport const updateProcedure = (data, id) => (dispatch) => {\n\tdispatch({ type: FETCH_PROCEDURE_REQUEST });\n\n\treturn axios\n\t\t.put(`/procedures/${id}`, data)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURE_SUCCESS, payload: response.data });\n\t\t\ttoastr.success('Procedimento atualizado com sucesso');\n\t\t\tdispatch(Procedures());\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURE_ERROR, payload: error.response.data });\n\t\t\ttoastr.error(error.response.data.message);\n\t\t});\n};\n\nexport const deletePhoto = (id, photo) => (dispatch) => {\n\tdispatch({ type: FETCH_PROCEDURE_REQUEST });\n\n\treturn axios\n\t\t.put(`/procedures/${id}/photos`, { photo: photo })\n\t\t.then((response) => {\n\t\t\t//dispatch({ type: FETCH_PROCEDURE_SUCCESS, payload: response.data });\n\t\t\ttoastr.success('Foto excluida com sucesso');\n\t\t\tdispatch(Procedures());\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURE_ERROR, payload: error.response.data });\n\t\t\ttoastr.error(error.response.data.message);\n\t\t});\n};\n\nexport const Procedures = () => (dispatch) => {\n\tdispatch({ type: FETCH_PROCEDURES_REQUEST });\n\n\treturn axios\n\t\t.get('/procedures')\n\t\t.then((response) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURES_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURES_ERROR, payload: error.response.data });\n\t\t});\n};\n\nexport const searchProcedures = (input) => (dispatch) => {\n\tdispatch({ type: FETCH_PROCEDURES_REQUEST });\n\n\treturn axios\n\t\t.get(`/procedures/search/?search=${input}`)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURES_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURES_ERROR, payload: error.response.data });\n\t\t});\n};\n","import React, { useEffect } from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Procedures } from '../../redux/actions/procedureActions';\nimport './styles.css';\n\nconst Table = ({ rowSelect }) => {\n\tconst { items } = useSelector((state) => state.procedure.procedures);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(Procedures());\n\t}, [dispatch]);\n\n\tconst selectRowProp = {\n\t\tmode: 'radio',\n\t\tclickToSelect: false,\n\t\tonSelect: (row) => rowSelect(row),\n\t};\n\n\tconst formatService = (cell, row) => {\n\t\treturn cell.description;\n\t};\n\n\treturn (\n\t\t<BootstrapTable\n\t\t\tdata={items}\n\t\t\tstriped\n\t\t\thover\n\t\t\tversion=\"4\"\n\t\t\tselectRow={selectRowProp}\n\t\t\tpagination\n\t\t\toptions={{ noDataText: 'Não há itens a exibir' }}\n\t\t>\n\t\t\t<TableHeaderColumn isKey dataField=\"_id\" hidden>\n\t\t\t\tId\n\t\t\t</TableHeaderColumn>\n\t\t\t<TableHeaderColumn dataField=\"name\" filter={{ type: 'TextFilter', delay: 1000 }} dataSort={true}>\n\t\t\t\tProcedimento\n\t\t\t</TableHeaderColumn>\n\t\t\t<TableHeaderColumn\n\t\t\t\tdataField=\"service\"\n\t\t\t\tfilter={{ type: 'TextFilter', delay: 1000 }}\n\t\t\t\tdataSort={true}\n\t\t\t\tdataFormat={formatService}\n\t\t\t\twidth={'180px'}\n\t\t\t>\n\t\t\t\tServiço\n\t\t\t</TableHeaderColumn>\n\t\t\t<TableHeaderColumn dataField=\"description\">Descrição</TableHeaderColumn>\n\t\t</BootstrapTable>\n\t);\n};\n\nexport default Table;\n","import {\n\tFETCH_SERVICE_REQUEST,\n\tFETCH_SERVICE_SUCCESS,\n\tFETCH_SERVICE_ERROR,\n\tFETCH_SERVICES_REQUEST,\n\tFETCH_SERVICES_SUCCESS,\n\tFETCH_SERVICES_ERROR,\n} from '../types';\n\nimport { toastr } from 'react-redux-toastr';\n\nimport axios from 'axios';\n\nexport const saveService = data => dispatch => {\n\tdispatch({ type: FETCH_SERVICE_REQUEST });\n\n\treturn axios\n\t\t.post('/services', data)\n\t\t.then(response => {\n\t\t\tdispatch({ type: FETCH_SERVICE_SUCCESS, payload: response.data });\n\t\t\ttoastr.success('Procedimento salvo com sucesso');\n\t\t\tdispatch(Services());\n\t\t})\n\t\t.catch(error => {\n\t\t\tdispatch({ type: FETCH_SERVICE_ERROR, payload: error.response.data });\n\t\t\ttoastr.error(error.response.data.message);\n\t\t});\n};\n\nexport const updateService = (data, id) => dispatch => {\n\tdispatch({ type: FETCH_SERVICES_REQUEST });\n\n\treturn axios\n\t\t.put(`/services/${id}`, data)\n\t\t.then(response => {\n\t\t\tdispatch({ type: FETCH_SERVICES_SUCCESS, payload: response.data });\n\t\t\ttoastr.success('Procedimento atualizado com sucesso');\n\t\t\tdispatch(Services());\n\t\t})\n\t\t.catch(error => {\n\t\t\tdispatch({ type: FETCH_SERVICES_ERROR, payload: error.response.data });\n\t\t\ttoastr.error(error.response.data.message);\n\t\t});\n};\n\nexport const Services = () => dispatch => {\n\tdispatch({ type: FETCH_SERVICES_REQUEST });\n\n\treturn axios\n\t\t.get('/services')\n\t\t.then(response => {\n\t\t\tdispatch({ type: FETCH_SERVICES_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch(error => {\n\t\t\tdispatch({ type: FETCH_SERVICES_ERROR, payload: error.response.data });\n\t\t});\n};\n\nexport const Search = input => dispatch => {\n\tdispatch({ type: FETCH_SERVICES_REQUEST });\n\n\treturn axios\n\t\t.get(`/services/search/?search=${input}`)\n\t\t.then(response => {\n\t\t\tdispatch({ type: FETCH_SERVICES_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch(error => {\n\t\t\tdispatch({ type: FETCH_SERVICES_ERROR, payload: error.response.data });\n\t\t});\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Input, TextArea, Select } from '../../components/common/Form';\nimport Table from './Table';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveProcedure, updateProcedure } from '../../redux/actions/procedureActions';\nimport { Services } from '../../redux/actions/serviceActions';\n\nconst Procedure = () => {\n\tconst [editMod, setEditMod] = useState(false);\n\n\tconst procedure = useSelector((state) => state.procedure.procedure);\n\tconst services = useSelector((state) => state.service.services);\n\tconst dispatch = useDispatch();\n\n\tconst formRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tdispatch(Services());\n\t}, [dispatch]);\n\n\tconst rowSelect = (row) => {\n\t\tsetEditMod(true);\n\t\tformRef.current.setData({\n\t\t\tservice: { value: row.service._id, label: row.service.description },\n\t\t\tname: row.name,\n\t\t\tdescription: row.description,\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tif (procedure.success === true) {\n\t\t\tsetEditMod(false);\n\t\t\tformRef.current.setErrors({});\n\t\t\tformRef.current.reset();\n\t\t}\n\t\tif (procedure.error) {\n\t\t\tconst errorMessages = {};\n\t\t\terrorMessages[procedure.error.path] = procedure.error.message;\n\t\t\tformRef.current.setErrors(errorMessages);\n\t\t}\n\t}, [procedure.success, procedure.error]);\n\n\tconst handleSubmit = async (data) => {\n\t\ttry {\n\t\t\tconst schema = Yup.object().shape({\n\t\t\t\tservice: Yup.string().ensure().required('Campo obrigatorio'),\n\t\t\t\tname: Yup.string().required('Preencha o procedimento'),\n\t\t\t});\n\t\t\tawait schema.validate(data, { abortEarly: false });\n\t\t\tconst sendData = {\n\t\t\t\tservice: data.service.value,\n\t\t\t\tname: data.name,\n\t\t\t\tdescription: data.description,\n\t\t\t};\n\t\t\teditMod ? dispatch(updateProcedure(sendData, data._id)) : dispatch(saveProcedure(sendData));\n\t\t} catch (error) {\n\t\t\tif (error instanceof Yup.ValidationError) {\n\t\t\t\tconst errorMessages = {};\n\t\t\t\terror.inner.forEach((erro) => {\n\t\t\t\t\terrorMessages[erro.path] = erro.message;\n\t\t\t\t\tformRef.current.setErrors(errorMessages);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Row>\n\t\t\t\t<Col m4={4}>\n\t\t\t\t\t<p className=\"title text-center\">Cadastro Procedimentos</p>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Form ref={formRef} onSubmit={handleSubmit}>\n\t\t\t\t<Row className=\"mt-4\">\n\t\t\t\t\t<Col md={3}>\n\t\t\t\t\t\t<Select name=\"service\" label=\"Serviço\" options={services.options} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t<Input name=\"name\" label=\"Procedimento\" />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<TextArea name=\"description\" label=\"Descrição\" rows=\"8\" />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6} className=\"text-right\">\n\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\n\t\t\t\t\t\t\t{editMod ? 'Atualizar' : 'Salvar'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"danger\" onClick={() => window.location.reload()}>\n\t\t\t\t\t\t\tCancela\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Form>\n\t\t\t<Row className=\"my-4\">\n\t\t\t\t<Col md={12}>\n\t\t\t\t\t<Table rowSelect={rowSelect} />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n\nexport default Procedure;\n"],"sourceRoot":""}