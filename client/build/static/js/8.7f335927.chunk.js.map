{"version":3,"sources":["redux/actions/procedureActions.js","components/common/Loading/index.jsx","redux/actions/serviceActions.js","pages/Procedure/Table.js","pages/Procedure/index.js"],"names":["saveProcedure","data","dispatch","type","FETCH_PROCEDURE_REQUEST","axios","post","then","response","FETCH_PROCEDURE_SUCCESS","payload","catch","error","FETCH_PROCEDURE_ERROR","updateProcedure","id","put","console","log","UPDATE_PROCEDURE_SUCCESS","Procedures","FETCH_PROCEDURES_REQUEST","get","FETCH_PROCEDURES_SUCCESS","FETCH_PROCEDURES_ERROR","Loading","show","saveService","FETCH_SERVICE_REQUEST","FETCH_SERVICE_SUCCESS","FETCH_SERVICE_ERROR","updateService","UPDATE_SERVICE_SUCCESS","getServices","FETCH_SERVICES_REQUEST","FETCH_SERVICES_SUCCESS","FETCH_SERVICES_ERROR","Table","rowSelect","useSelector","state","procedure","procedures","items","loading","useDispatch","useEffect","Spinner","striped","hover","version","pagination","options","noDataText","isKey","dataField","hidden","filter","delay","dataSort","dataFormat","cell","row","description","width","className","OverlayTrigger","placement","overlay","Tooltip","Button","onClick","variant","size","Procedure","useState","editMod","setEditMod","success","services","service","formRef","useRef","toastr","current","setErrors","reset","undefined","Object","keys","length","errorMessages","path","message","handleSubmit","a","schema","Yup","shape","ensure","required","name","validate","abortEarly","sendData","value","_id","inner","forEach","erro","Row","Col","m4","ref","onSubmit","md","label","rows","window","location","reload","setData"],"mappings":"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","file":"static/js/8.7f335927.chunk.js","sourcesContent":["import {\n\tFETCH_PROCEDURE_REQUEST,\n\tFETCH_PROCEDURE_SUCCESS,\n\tUPDATE_PROCEDURE_SUCCESS,\n\tFETCH_PROCEDURE_ERROR,\n\tFETCH_PROCEDURES_REQUEST,\n\tFETCH_PROCEDURES_SUCCESS,\n\tFETCH_PROCEDURES_ERROR,\n} from '../types';\n\nimport axios from 'axios';\n\nexport const saveProcedure = (data) => (dispatch) => {\n\tdispatch({ type: FETCH_PROCEDURE_REQUEST });\n\n\treturn axios\n\t\t.post('/procedures', data)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURE_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURE_ERROR, payload: error.response.data });\n\t\t});\n};\n\nexport const updateProcedure = (data, id) => (dispatch) => {\n\tdispatch({ type: FETCH_PROCEDURE_REQUEST });\n\n\treturn axios\n\t\t.put(`/procedures/${id}`, data)\n\t\t.then((response) => {\n\t\t\tconsole.log(response.data);\n\t\t\tdispatch({ type: UPDATE_PROCEDURE_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURE_ERROR, payload: error.response.data });\n\t\t});\n};\n\nexport const Procedures = () => (dispatch) => {\n\tdispatch({ type: FETCH_PROCEDURES_REQUEST });\n\n\treturn axios\n\t\t.get('/procedures')\n\t\t.then((response) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURES_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURES_ERROR, payload: error.response.data });\n\t\t});\n};\n\nexport const searchProcedures = (input) => (dispatch) => {\n\tdispatch({ type: FETCH_PROCEDURES_REQUEST });\n\n\treturn axios\n\t\t.get(`/procedures/search/?search=${input}`)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURES_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_PROCEDURES_ERROR, payload: error.response.data });\n\t\t});\n};\n","import React from 'react';\nimport './styles.css';\nconst Loading = ({ show = false }) => {\n\treturn show === true && <div id=\"cover-spin\"></div>;\n};\n\nexport default Loading;\n","import {\n\tFETCH_SERVICE_REQUEST,\n\tFETCH_SERVICE_SUCCESS,\n\tUPDATE_SERVICE_SUCCESS,\n\tFETCH_SERVICE_ERROR,\n\tFETCH_SERVICES_REQUEST,\n\tFETCH_SERVICES_SUCCESS,\n\tFETCH_SERVICES_ERROR,\n} from '../types';\n\nimport axios from 'axios';\n\nexport const saveService = (data) => (dispatch) => {\n\tdispatch({ type: FETCH_SERVICE_REQUEST });\n\n\treturn axios\n\t\t.post('/services', data)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: FETCH_SERVICE_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_SERVICE_ERROR, payload: error.response.data });\n\t\t});\n};\n\nexport const updateService = (data, id) => (dispatch) => {\n\tdispatch({ type: FETCH_SERVICE_REQUEST });\n\n\treturn axios\n\t\t.put(`/services/${id}`, data)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: UPDATE_SERVICE_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_SERVICE_ERROR, payload: error.response.data });\n\t\t});\n};\n\nexport const getServices = () => (dispatch) => {\n\tdispatch({ type: FETCH_SERVICES_REQUEST });\n\n\treturn axios\n\t\t.get('/services')\n\t\t.then((response) => {\n\t\t\tdispatch({ type: FETCH_SERVICES_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_SERVICES_ERROR, payload: error.response.data });\n\t\t});\n};\n\nexport const Search = (input) => (dispatch) => {\n\tdispatch({ type: FETCH_SERVICES_REQUEST });\n\n\treturn axios\n\t\t.get(`/services/search/?search=${input}`)\n\t\t.then((response) => {\n\t\t\tdispatch({ type: FETCH_SERVICES_SUCCESS, payload: response.data });\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch({ type: FETCH_SERVICES_ERROR, payload: error.response.data });\n\t\t});\n};\n","import React, { useEffect } from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { Tooltip, OverlayTrigger, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Procedures } from '../../redux/actions/procedureActions';\nimport Spinner from '../../components/common/Spinner';\nimport { MdEdit } from 'react-icons/md';\nimport './styles.css';\n\nconst Table = ({ rowSelect }) => {\n\tconst { items, loading } = useSelector((state) => state.procedure.procedures);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(Procedures());\n\t}, [dispatch]);\n\n\tconst formatService = (cell, row) => {\n\t\treturn cell.description;\n\t};\n\n\tconst actionFormat = (cell, row) => {\n\t\treturn (\n\t\t\t<div className=\"form-iline\">\n\t\t\t\t<OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"edit\">Editar</Tooltip>}>\n\t\t\t\t\t<Button onClick={() => rowSelect(row)} variant=\"link\">\n\t\t\t\t\t\t<MdEdit size={24} />\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</Button>\n\t\t\t\t</OverlayTrigger>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn loading ? (\n\t\t<Spinner />\n\t) : (\n\t\t<BootstrapTable\n\t\t\tdata={items}\n\t\t\tstriped\n\t\t\thover\n\t\t\tversion=\"4\"\n\t\t\tpagination\n\t\t\toptions={{ noDataText: 'Não há itens a exibir' }}\n\t\t>\n\t\t\t<TableHeaderColumn isKey dataField=\"_id\" hidden>\n\t\t\t\tId\n\t\t\t</TableHeaderColumn>\n\t\t\t<TableHeaderColumn dataField=\"name\" filter={{ type: 'TextFilter', delay: 1000 }} dataSort={true}>\n\t\t\t\tProcedimento\n\t\t\t</TableHeaderColumn>\n\t\t\t<TableHeaderColumn\n\t\t\t\tdataField=\"service\"\n\t\t\t\tfilter={{ type: 'TextFilter', delay: 1000 }}\n\t\t\t\tdataSort={true}\n\t\t\t\tdataFormat={formatService}\n\t\t\t\twidth={'180px'}\n\t\t\t>\n\t\t\t\tServiço\n\t\t\t</TableHeaderColumn>\n\t\t\t<TableHeaderColumn dataField=\"description\">Descrição</TableHeaderColumn>\n\t\t\t<TableHeaderColumn width=\"90\" dataFormat={actionFormat}>\n\t\t\t\tAções\n\t\t\t</TableHeaderColumn>\n\t\t</BootstrapTable>\n\t);\n};\n\nexport default Table;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Input, TextArea, Select } from '../../components/common/Form';\nimport Table from './Table';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveProcedure, updateProcedure } from '../../redux/actions/procedureActions';\nimport { getServices } from '../../redux/actions/serviceActions';\nimport Loading from '../../components/common/Loading';\nimport { toastr } from 'react-redux-toastr';\n\nconst Procedure = () => {\n\tconst [editMod, setEditMod] = useState(false);\n\n\tconst { success, error, loading } = useSelector((state) => state.procedure.procedure);\n\tconst services = useSelector((state) => state.service.services);\n\tconst dispatch = useDispatch();\n\n\tconst formRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tdispatch(getServices());\n\t}, [dispatch]);\n\n\tconst rowSelect = (row) => {\n\t\tconsole.log(row);\n\t\tsetEditMod(true);\n\t\tformRef.current.setData({\n\t\t\t_id: row._id,\n\t\t\tservice: { value: row.service._id, label: row.service.description },\n\t\t\tname: row.name,\n\t\t\tdescription: row.description,\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tif (success === true) {\n\t\t\ttoastr.success('Procedimento salvo com sucesso!');\n\t\t\tsetEditMod(false);\n\t\t\tformRef.current.setErrors({});\n\t\t\tformRef.current.reset();\n\t\t}\n\t\tif (error !== undefined && Object.keys(error).length > 0) {\n\t\t\tconst errorMessages = {};\n\t\t\terrorMessages[error.path] = error.message;\n\n\t\t\tformRef.current.setErrors(errorMessages);\n\t\t\ttoastr.error('Ocorreu um erro ao salvar o procedimento');\n\t\t}\n\t}, [success, error]);\n\n\tconst handleSubmit = async (data) => {\n\t\ttry {\n\t\t\tconst schema = Yup.object().shape({\n\t\t\t\tservice: Yup.string().ensure().required('Campo obrigatorio'),\n\t\t\t\tname: Yup.string().required('Preencha o procedimento'),\n\t\t\t});\n\t\t\tawait schema.validate(data, { abortEarly: false });\n\t\t\tconst sendData = {\n\t\t\t\tservice: data.service.value,\n\t\t\t\tname: data.name,\n\t\t\t\tdescription: data.description,\n\t\t\t};\n\t\t\teditMod ? dispatch(updateProcedure(sendData, data._id)) : dispatch(saveProcedure(sendData));\n\t\t} catch (error) {\n\t\t\tif (error instanceof Yup.ValidationError) {\n\t\t\t\tconst errorMessages = {};\n\t\t\t\terror.inner.forEach((erro) => {\n\t\t\t\t\terrorMessages[erro.path] = erro.message;\n\t\t\t\t\tformRef.current.setErrors(errorMessages);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Loading show={loading} />\n\t\t\t<Row>\n\t\t\t\t<Col m4={4}>\n\t\t\t\t\t<p className=\"title text-center\">Cadastro Procedimentos</p>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Form ref={formRef} onSubmit={handleSubmit}>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<Input name=\"_id\" hidden />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"mt-4\">\n\t\t\t\t\t<Col md={3}>\n\t\t\t\t\t\t<Select name=\"service\" label=\"Serviço\" options={services.options} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t<Input name=\"name\" label=\"Procedimento\" />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<TextArea name=\"description\" label=\"Descrição\" rows=\"8\" />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6} className=\"text-right\">\n\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\n\t\t\t\t\t\t\t{editMod ? 'Atualizar' : 'Salvar'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"danger\" onClick={() => window.location.reload()}>\n\t\t\t\t\t\t\tCancela\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Form>\n\t\t\t<Row className=\"my-4\">\n\t\t\t\t<Col md={12}>\n\t\t\t\t\t<Table rowSelect={rowSelect} />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n\nexport default Procedure;\n"],"sourceRoot":""}