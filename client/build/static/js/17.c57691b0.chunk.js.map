{"version":3,"sources":["pages/Service/Table.js","pages/Service/index.js"],"names":["Table","data","rowSelect","selectRowProp","mode","clickToSelect","onSelect","row","isSelected","e","striped","hover","version","selectRow","pagination","options","noDataText","isKey","dataField","hidden","filter","type","delay","dataSort","width","Service","useState","editMod","setEditMod","services","setServices","formRef","useRef","loadServices","a","axios","get","result","useEffect","saveData","schema","Yup","shape","description","required","validate","abortEarly","post","then","response","toastr","success","current","reset","setErrors","catch","error","errorMessages","path","message","inner","forEach","erro","updateData","put","_id","console","log","Row","clas","Col","md","className","ref","onSubmit","name","label","style","rows","cols","Button","variant","onClick","window","location","reload","setData"],"mappings":"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","file":"static/js/17.c57691b0.chunk.js","sourcesContent":["import React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nconst Table = ({ data, rowSelect }) => {\n\tconst selectRowProp = {\n\t\tmode: 'radio',\n\t\tclickToSelect: false,\n\t\tonSelect: (row, isSelected, e) => rowSelect(row, isSelected),\n\t};\n\n\treturn (\n\t\t<BootstrapTable\n\t\t\tdata={data}\n\t\t\tstriped\n\t\t\thover\n\t\t\tversion=\"4\"\n\t\t\tselectRow={selectRowProp}\n\t\t\tpagination\n\t\t\toptions={{ noDataText: 'Não há itens a exibir' }}\n\t\t>\n\t\t\t<TableHeaderColumn isKey dataField=\"_id\" hidden>\n\t\t\t\tId\n\t\t\t</TableHeaderColumn>\n\t\t\t<TableHeaderColumn\n\t\t\t\tdataField=\"description\"\n\t\t\t\tfilter={{ type: 'TextFilter', delay: 1000 }}\n\t\t\t\tdataSort={true}\n\t\t\t\twidth=\"500px\"\n\t\t\t>\n\t\t\t\tDescrição\n\t\t\t</TableHeaderColumn>\n\t\t\t<TableHeaderColumn dataField=\"observations\">Observações</TableHeaderColumn>\n\t\t</BootstrapTable>\n\t);\n};\n\nexport default Table;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Input, TextArea } from '../../components/common/Form';\nimport { toastr } from 'react-redux-toastr';\nimport Table from './Table';\nimport axios from 'axios';\n\nconst Service = () => {\n\tconst [editMod, setEditMod] = useState(false);\n\tconst [services, setServices] = useState([]);\n\n\tconst formRef = useRef(null);\n\n\tasync function loadServices() {\n\t\tconst result = await axios.get('/services');\n\t\tsetServices(result.data);\n\t}\n\n\tuseEffect(() => {\n\t\tloadServices();\n\t}, []);\n\n\tconst saveData = async (data) => {\n\t\ttry {\n\t\t\tconst schema = Yup.object().shape({\n\t\t\t\tdescription: Yup.string().required('Descrição obrigatoria'),\n\t\t\t});\n\t\t\tawait schema.validate(data, { abortEarly: false });\n\t\t\taxios\n\t\t\t\t.post('/services', data)\n\t\t\t\t.then((response) => {\n\t\t\t\t\ttoastr.success('Serviço criado com sucesso');\n\t\t\t\t\tformRef.current.reset();\n\t\t\t\t\tsetEditMod(false);\n\t\t\t\t\tformRef.current.setErrors({});\n\t\t\t\t\tloadServices();\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconst errorMessages = {};\n\t\t\t\t\tconst { path, message } = error.response.data;\n\t\t\t\t\terrorMessages[path] = message;\n\t\t\t\t\tformRef.current.setErrors(errorMessages);\n\t\t\t\t\ttoastr.error(message);\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (error instanceof Yup.ValidationError) {\n\t\t\t\tconst errorMessages = {};\n\t\t\t\terror.inner.forEach((erro) => {\n\t\t\t\t\terrorMessages[erro.path] = erro.message;\n\t\t\t\t\tformRef.current.setErrors(errorMessages);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst updateData = async (data) => {\n\t\ttry {\n\t\t\tconst schema = Yup.object().shape({\n\t\t\t\tdescription: Yup.string().required('Descrição obrigatoria'),\n\t\t\t});\n\t\t\tawait schema.validate(data, { abortEarly: false });\n\t\t\taxios\n\t\t\t\t.put(`/services/${data._id}`, data)\n\t\t\t\t.then((response) => {\n\t\t\t\t\ttoastr.success('Serviço criado com sucesso');\n\t\t\t\t\tformRef.current.reset();\n\t\t\t\t\tsetEditMod(false);\n\t\t\t\t\tloadServices();\n\t\t\t\t\tformRef.current.setErrors({});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconst { data } = error.response;\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (error instanceof Yup.ValidationError) {\n\t\t\t\tconst errorMessages = {};\n\t\t\t\terror.inner.forEach((erro) => {\n\t\t\t\t\terrorMessages[erro.path] = erro.message;\n\t\t\t\t\tformRef.current.setErrors(errorMessages);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleSubmit = (data) => {\n\t\tif (editMod) {\n\t\t\tupdateData(data);\n\t\t} else {\n\t\t\tsaveData(data);\n\t\t}\n\t};\n\n\tconst rowSelect = (row, isSelected) => {\n\t\tsetEditMod(true);\n\t\tformRef.current.setData(row);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Row clas=\"justify-content-center\">\n\t\t\t\t<Col md={12} className=\"text-center\">\n\t\t\t\t\t<p className=\"title\">Cadastro Serviços</p>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Form ref={formRef} onSubmit={handleSubmit}>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<Input name=\"_id\" hidden />\n\t\t\t\t\t\t<Input name=\"description\" label=\"Descrição\" style={{ width: '60%' }} />\n\t\t\t\t\t\t<TextArea name=\"observations\" label=\"Observações\" rows=\"5\" cols=\"33\" />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6} className=\"text-right\">\n\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\n\t\t\t\t\t\t\t{editMod ? 'Atualizar' : 'Salvar'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"danger\" onClick={() => window.location.reload()}>\n\t\t\t\t\t\t\tCancela\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Form>\n\t\t\t<Row className=\"my-4\">\n\t\t\t\t<Col md={12}>\n\t\t\t\t\t<Table data={services} rowSelect={rowSelect} />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n\nexport default Service;\n"],"sourceRoot":""}